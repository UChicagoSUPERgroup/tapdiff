task 8: 1) p23_8 vs. 2) p21_8
{'trigger': 'weather_sensor.current_temperature_temperature>80', 'action': 'bedroom_window.openclose_window_position=false', 'condition': []}
{'trigger': 'weather_sensor.current_temperature_temperature<60', 'action': 'bedroom_window.openclose_window_position=false', 'condition': []}
{'trigger': 'weather_sensor.weather_sensor_weather=Raining', 'action': 'bedroom_window.openclose_window_position=false', 'condition': []}
{'trigger': 'weather_sensor.current_temperature_temperature>80', 'action': 'bedroom_window.openclose_window_position=false', 'condition': []}
{'trigger': 'weather_sensor.is_it_raining_condition=true', 'action': 'bedroom_window.openclose_window_position=false', 'condition': []}
{'trigger': 'weather_sensor.is_it_raining_condition=false', 'action': 'bedroom_window.openclose_curtains_position=true', 'condition': []}
{'trigger': 'weather_sensor.current_temperature_temperature<60', 'action': 'bedroom_window.openclose_window_position=false', 'condition': []}
Traceback (most recent call last):
  File "test.py", line 46, in <module>
    importlib.import_module('tests.' + test_file)
  File "/usr/lib/python3.5/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 986, in _gcd_import
  File "<frozen importlib._bootstrap>", line 969, in _find_and_load
  File "<frozen importlib._bootstrap>", line 958, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 673, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 665, in exec_module
  File "<frozen importlib._bootstrap>", line 222, in _call_with_frames_removed
  File "/home/iftttuser/AutoTap/tests/UserStudyDiffTest.py", line 125, in <module>
    system_2 = generateFastIoTSystem('TempSystem', channel_dict2, tap_dict_2, [])
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 162, in generateFastIoTSystem
    result = TempIoTSystem()
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 33, in __init__
    super(FastIoTSystem, self).__init__(timing_exp_list=[])
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystem.py", line 127, in __init__
    self._createTS()
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 142, in _createTS
    next_action_list = self._checkNextActions(current_tuple)
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 99, in _checkNextActions
    self._applyTapActionFast(tap_index, current_tuple)))
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 73, in _applyTapActionFast
    action_var_index = self.var_index_dict[action_var]
KeyError: 'bedroom_window.openclose_window_position'


task 12: 1) p44_12 vs. 2) p23_12
{'condition': ['roomba.power_onoff_setting=true'], 'action': 'living_room_window.openclose_curtains_position=false', 'trigger': 'living_room_window.openclose_curtains_position=true'}
{'condition': [], 'action': 'bathroom_window.openclose_curtains_position=false', 'trigger': 'roomba.power_onoff_setting=true'}
{'condition': [], 'action': 'bedroom_window.openclose_curtains_position=false', 'trigger': 'roomba.power_onoff_setting=true'}
{'condition': [], 'action': 'living_room_window.openclose_curtains_position=false', 'trigger': 'roomba.power_onoff_setting=true'}
Traceback (most recent call last):
  File "test.py", line 46, in <module>
    importlib.import_module('tests.' + test_file)
  File "/usr/lib/python3.5/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 986, in _gcd_import
  File "<frozen importlib._bootstrap>", line 969, in _find_and_load
  File "<frozen importlib._bootstrap>", line 958, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 673, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 665, in exec_module
  File "<frozen importlib._bootstrap>", line 222, in _call_with_frames_removed
  File "/home/iftttuser/AutoTap/tests/UserStudyDiffTest.py", line 125, in <module>
    system_2 = generateFastIoTSystem('TempSystem', channel_dict2, tap_dict_2, [])
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 162, in generateFastIoTSystem
    result = TempIoTSystem()
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 33, in __init__
    super(FastIoTSystem, self).__init__(timing_exp_list=[])
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystem.py", line 127, in __init__
    self._createTS()
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 142, in _createTS
    next_action_list = self._checkNextActions(current_tuple)
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 99, in _checkNextActions
    self._applyTapActionFast(tap_index, current_tuple)))
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 73, in _applyTapActionFast
    action_var_index = self.var_index_dict[action_var]
KeyError: 'bedroom_window.openclose_curtains_position'


task 4: 1) p38_4 vs. 2) p18_4
{'condition': [], 'action': 'thermostat.ac_onoff_setting=true', 'trigger': 'thermostat.current_temperature_temperature=80'}
{'condition': [], 'action': 'smart_oven.lockunlock_setting=true', 'trigger': 'smart_oven.power_onoff_setting=true'}
{'condition': [], 'action': 'thermostat.ac_onoff_setting=true', 'trigger': 'thermostat.current_temperature_temperature>80'}
Traceback (most recent call last):
  File "test.py", line 46, in <module>
    importlib.import_module('tests.' + test_file)
  File "/usr/lib/python3.5/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 986, in _gcd_import
  File "<frozen importlib._bootstrap>", line 969, in _find_and_load
  File "<frozen importlib._bootstrap>", line 958, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 673, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 665, in exec_module
  File "<frozen importlib._bootstrap>", line 222, in _call_with_frames_removed
  File "/home/iftttuser/AutoTap/tests/UserStudyDiffTest.py", line 123, in <module>
    setSafeInitState(channel_dict2, tap_sample_2)
  File "/home/iftttuser/AutoTap/tests/UserStudyDiffTest.py", line 65, in setSafeInitState
    val_trigger = tap.trigger.split('=')[1]
IndexError: list index out of range


task 7: 1) p23_7 vs. 2) p27_7
{'trigger': 'smart_faucet.water_onoff_setting=true', 'action': 'smart_faucet.water_onoff_setting=false', 'condition': []}
{'trigger': 'smart_faucet.water_onoff_setting=true', 'action': 'smart_faucet.water_onoff_setting=true', 'condition': []}
{'trigger': 'smart_faucet.water_onoff_setting=false', 'action': 'smart_faucet.water_onoff_setting=false', 'condition': []}
{'trigger': 'security_camera.power_onoff_setting=true', 'action': 'smart_faucet.water_onoff_setting=false', 'condition': ['smart_faucet.water_onoff_setting=false']}
{'trigger': 'location_sensor.kitchen_a_family_member=false', 'action': 'smart_faucet.water_onoff_setting=false', 'condition': []}
Traceback (most recent call last):
  File "test.py", line 46, in <module>
    importlib.import_module('tests.' + test_file)
  File "/usr/lib/python3.5/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 986, in _gcd_import
  File "<frozen importlib._bootstrap>", line 969, in _find_and_load
  File "<frozen importlib._bootstrap>", line 958, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 673, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 665, in exec_module
  File "<frozen importlib._bootstrap>", line 222, in _call_with_frames_removed
  File "/home/iftttuser/AutoTap/tests/UserStudyDiffTest.py", line 125, in <module>
    system_2 = generateFastIoTSystem('TempSystem', channel_dict2, tap_dict_2, [])
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 162, in generateFastIoTSystem
    result = TempIoTSystem()
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 33, in __init__
    super(FastIoTSystem, self).__init__(timing_exp_list=[])
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystem.py", line 127, in __init__
    self._createTS()
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 142, in _createTS
    next_action_list = self._checkNextActions(current_tuple)
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 99, in _checkNextActions
    self._applyTapActionFast(tap_index, current_tuple)))
  File "/home/iftttuser/AutoTap/autotapmc/model/IoTSystemForDiff.py", line 84, in _applyTapActionFast
    if current_states[cond_var_index_list] == cond_var_target_list:
TypeError: list indices must be integers or slices, not list


